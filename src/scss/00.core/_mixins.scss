/*=========================================
=            Default animation            =
=========================================*/

@mixin anim-reveal-hide {
    opacity: 0;
    transform: translate(0, 2rem);
    transition: transform var(--a-out-duration, 0.4s)
            var(--a-out-ease, #{$in-sine}) var(--a-out-delay, 0s),
        opacity var(--a-out-duration, 0.4s) var(--a-out-ease, #{$in-sine})
            calc(var(--a-out-duration, 0.4s) + var(--a-out-delay, 0s));
    // will-change: opacity, transform;
}

@mixin anim-reveal-show {
    opacity: 1;
    transform: translateY(0);
    transition: transform var(--a-in-duration, 0.4s)
            var(--a-in-ease, #{$out-quad}) var(--a-in-delay, 0s),
        opacity var(--a-in-duration, 0.4s) var(--a-in-ease, #{$out-quad})
            var(--a-in-delay, 0s);
}

@mixin anim-reveal-default {
    &.js-reveal {
        @include anim-reveal-hide;

        &.is-visible {
            @include anim-reveal-show;
        }
    }
}

@mixin vue-transition-fade {
    .fade-enter-active,
    .fade-leave-active {
        transition: opacity 0.5s $custom-ease;
    }

    .fade-enter-from,
    .fade-leave-to {
        opacity: 0;
    }
}

@mixin vue-transition-slide {
    .slide-enter-active,
    .slide-leave-active {
        transition: opacity 0.5s $custom-ease, transform 0.5s $custom-ease;
    }

    .slide-enter-from,
    .slide-leave-to {
        @include transform(translateY(2rem));
        opacity: 0;
    }
}
@mixin vue-transition-slide-horizontal {
    .slide-horizontal-enter-active,
    .slide-horizontal-leave-active {
        transition: opacity 0.5s $custom-ease, transform 0.5s $custom-ease;
    }

    .slide-horizontal-enter-from,
    .slide-horizontal-leave-to {
        @include transform(translateX(2rem));
        opacity: 0;
    }
}

@mixin stagger-delay($i, $stagger-delay) {
    @while $i > 0 {
        &:nth-child(#{$i}) {
            //transition-delay: $initial-delay + $stagger-delay * $i;
            transition-delay: calc(
                var(--initial-delay, 0s) + #{$stagger-delay * $i}s
            );
        }
        $i: $i - 1;
    }
}
